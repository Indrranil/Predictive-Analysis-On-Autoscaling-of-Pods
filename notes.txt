
1. Data -> csv [time.date,cpuUsage,memUage,pod_name,cmRatio]

2. Model -> LinearRegression

3. Result -> Prediction -> correct 

4. RealTIme use -> pending 

:











* fix git coflict

*** understand the op from the model first






PURPOSE: 

        TRADITIONAL: HPA,VPA,CA
                    . Scales based on the CPU or mem usage 
                    . During a flash sale the system might not react after
                      load increases, potentially leading to temp performamce
                      degradation

        PREDICTIVE: MODEL with COMPONENET
                    . Uses historical sales data and extracts factors like
                      marketing campaign schedules to predict the trffic spike 
                    . Scales resources in advance of the flash sale, ensuring s
                      smooth performanec and user experience throught the
                      event.









i
Idea -> 1. create a component for the applying the model prediction            that can be achieved through py script (chatgpt) 









    Progess Update -> model -> successfull training 
                    
                        model -> successsfull evluating
                            
                            model -> successfully predicting 






    Model -> python/bash script -> Updates the Deployment.yaml
